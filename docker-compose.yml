services:
  redis:
    image: 'redis:alpine'
    ports:
      - '6380:6379'
    networks:
      - namviek-network

  storage:
    image: 'quay.io/minio/minio'
    command: ["server", "/data", "--console-address", ":9001"]
    ports:
      - '9001:9001'
      - '9000:9000'
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=Admin@123
    volumes:
      - minio-data:/data
    networks:
      - namviek-network

  postgres:
    image: 'postgres:16-alpine'
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=namviek
      - POSTGRES_PASSWORD=namviek_password
      - POSTGRES_DB=namviek
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U namviek"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - namviek-network

  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
      args:
        - ENV_FILE=.env
    image: namviek
    env_file:
      - .env
    environment:
      - REDIS_HOST=redis:6379
      - DATABASE_URL=postgresql://namviek:namviek_password@postgres:5432/namviek?schema=public
      - AWS_MINIO_ENDPOINT=http://localhost:9000
    ports:
      - '3333:3000'
    command: /bin/sh -c "node ./main.js"
    healthcheck:
      test: curl --fail http://localhost:3333 || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    depends_on:
      - postgres
      - redis
      - storage
    networks:
      - namviek-network

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    env_file:
      - .env
    ports:
      - '3005:3000'
    command: /bin/sh -c 'HOSTNAME="0.0.0.0" node ./apps/frontend/server.js'
    depends_on:
      - backend
    networks:
      - namviek-network

volumes:
  postgres-data:
  minio-data:

networks:
  namviek-network:
